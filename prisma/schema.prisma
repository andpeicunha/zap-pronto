generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  posts     Message[]
  profileId Profile?
  Leads     Leads?

  @@map(name: "users")
}

model Message {
  id          String        @id @default(cuid())
  title       String
  content     String?
  destId      String
  published   Boolean       @default(false)
  author      User?         @relation(fields: [authorId], references: [id])
  authorId    Int?
  lead        Leads         @relation(fields: [leadId], references: [id])
  leadId      Int           @unique
  LeadMessage LeadMessage[]
}

model Profile {
  id          Int     @id @default(autoincrement())
  bio         String?
  phone       String?
  instanciaId Int?
  user        User    @relation(fields: [userId], references: [id])
  userId      Int     @unique
}

model Leads {
  id          Int           @id @default(autoincrement())
  name        String?
  phone       String?
  user        User          @relation(fields: [userId], references: [id])
  userId      Int           @unique
  Message     Message[]
  LeadMessage LeadMessage[]
}

model LeadMessage {
  id        Int      @id @default(autoincrement())
  messageId String   @map("message_id")
  message   Message  @relation(fields: [messageId], references: [id])
  leadId    Int      @map("lead_id")
  lead      Leads    @relation(fields: [leadId], references: [id])
  createdAt DateTime @default(now())

  @@index([messageId, leadId], name: "idx_lead_message")
}
